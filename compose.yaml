services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      NEXTAUTH_URL: http://193.168.145.227:3000
      AUTH_SECRET: bMBmR1WW1FT2d2QFdi7bGhBxk5AbqBZQRcoUcuyicd8
    profiles:
      - production

  db:
    image: postgres:17
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: user_pwd
      POSTGRES_DB: intervenant_manager
    volumes:
      - db-data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "8080:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    depends_on:
      - db

  app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - .:/app # Monte le dossier actuel dans le conteneur
      - /app/node_modules # Évite les conflits avec node_modules de l'hôte
    environment:
      NODE_ENV: development
    command: npm run dev
    profiles:
      - development

volumes:
  db-data:
